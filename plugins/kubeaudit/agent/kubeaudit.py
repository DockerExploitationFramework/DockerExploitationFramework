import sys
import base64
import os
from dockerexploitationframework import DEFAgent
import subprocess
import re


class kubeAudit(DEFAgent.Plugin): #Extend Plugin 

    def run(self):
     kauditpath = '.' + "/kube-audit"
     ansi_escape = re.compile(r'\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])')

     if len(sys.argv) > 1:
        command  = [kauditpath," ".join(sys.argv[1:])]
     else:
        command  = [kauditpath,"all","-m","error"]  
     data = subprocess.run(command ,capture_output=True).stdout.decode().strip()
     data = ansi_escape.sub('', data)

     print(data)
     self.sendMessage(data)

    def endPlugin(self):
        self.endRun()


def initialize():

# Check if MEIPASS attribute is available in sys else return current file path

 bundle_dir = getattr(sys, '_MEIPASS', os.path.abspath(os.path.dirname(__file__)))

 path_to_help = os.path.abspath(os.path.join(bundle_dir,'kubeaudit.txt'))
 program_data = ""


 with open(path_to_help, "r+") as btt:

  program_data = btt.read()

 program_data = base64.b64decode(program_data)
 if not os.path.isfile("kube-audit"):
    with open("kube-audit","wb") as bt:
        bt.write(program_data)
        os.chmod("kube-audit", 0o775)  


initialize()
myplugin = kubeAudit()
myplugin.run()
myplugin.endPlugin()



