
name: Build Binaries
run-name: Build binaries for x64 and arm
on: [workflow_dispatch]
jobs:
  Build_x64:
    runs-on: ubuntu-20.04
    container: 
     image: redhat/ubi8
    steps:
      - uses: actions/checkout@v4
        with:
          repository: DockerExploitationFramework/DockerExploitationFramework
      - run: ls -la
      - run: pwd
      - run: cat /etc/os-release
      - run: yum -y install python3.11-pip gcc gcc-c++ zlib-devel
      - run: pip3 install wheel pyinstaller
      - run: cd lib;ls -la;pwd
      - run: ls -la
      - run: pwd
      - run: pip3 install lib/
      - run: cd plugins; ./build_all.sh
      - run: tar -czf /tmp/DEF_x86_64.tar.gz .
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
         name: DEF linux (x86_64)
         path: /tmp/DEF_x86_64.tar.gz
         retention-days: 1

  Build_ARM:
    if: false
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with:
          repository: DockerExploitationFramework/DockerExploitationFramework    
      - run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
          brew install --cask virtualbox-beta
          brew install docker docker-machine
          docker-machine create --driver xhyve default
          docker-machine env default
      - run: arch
      - run: pwd
      - run: cat /etc/os-release
      - run: yum -y install python3.11-pip gcc gcc-c++ zlib-devel
      - run: pip3 install wheel pyinstaller
      - run: cd lib;ls -la;pwd
      - run: ls -la
      - run: pwd
      - run: pip3 install lib/
      - run: cd plugins; ./build_all.sh
      - run: tar -czf /tmp/DEF_arm64.tar.gz .
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
         name: DEF linux (arm64)
         path: /tmp/DEF_arm64.tar.gz
         retention-days: 1


      
